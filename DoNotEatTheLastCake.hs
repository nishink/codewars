-- https://www.codewars.com/kata/5384df88aa6fc164bb000e7d
-- Don't Eat the Last Cake!

-- ケーキの最初の数、前回の数を指定し、その後どのような展開が予想できるか
eat :: Int -> Int -> [[Int]]
eat 0 _ = [[]]
eat cakes last = concat [ map (i:) (eat (cakes - i) i) | i <- [1,2,3], cakes >= i, last /= i ]


firstMove :: Int -> Bool
firstMove cakes = case cakes of
  1 -> False
  c -> (c-2) `mod` 4 /= 0

move :: Int -> Int -> Int
move cakes last = undefined

{-
１、最後のケーキを食べてはいけない。
２、あなたのターンでは１、２、３個のケーキを食べる。
　　相手のターンも同じ。
３、相手が前回食べたケーキと同じ個数を食べてはいけない。
４、もし、相手が前回食べたケーキと同じ個数を食べるしかない状況になった場合、
　　ターンをスキップできる。
５、先手か後手かを選べる。

ケーキが１個の場合、そのケーキを食べるしかないので、後手を選べば勝ち。
ケーキが２個の場合、２個食べたら負け、１個食べても負けなので、後手を選べば勝ち。
ケーキが３個の場合、先手で１個または２個食べれば勝ち。後手でも相手が３個食べたら勝ち。
ケーキが４個の場合、先手で３個食べれば勝ち。
ケーキが５個の場合、先手で３個食べれば勝ち。
ケーキが６個の場合、後手で相手の出方を伺う。
　相手が１個の場合、３個食べれば勝ち。
　相手が２個の場合、３個食べれば勝ち。
　相手が３個の場合、１個でも２個でも勝ち。
ケーキが７個の場合、先手で１個食べれば、ケーキが６個で後手の場合と同じ。
ケーキが８個の場合、先手で２個食べれば、ケーキが６個で後手の場合と同じ。
ケーキが９個の場合、先手で３個食べれば、ケーキが６個で後手の場合と同じ。
ケーキが１０個の場合、後手で相手の出方を伺う。
　相手が１個の場合、３個食べれば、ケーキが６個で後手の場合と同じ。
　相手が３個の場合、１個食べれば、ケーキが６個で後手の場合と同じ。
　相手が２個の場合、３個食べると、相手は１個か２個。１個の場合は３個食べれば勝ち、２個の場合は１個食べれば勝ち。
ケーキが１１個の場合、先手で１個食べれば、ケーキが１０個で後手の場合と同じ。
ケーキが１２個の場合、先手で２個食べれば、ケーキが１０個で後手の場合と同じ。
ケーキが１３個の場合、先手で３個食べれば、ケーキが１０個で後手の場合と同じ。
ケーキが１４個の場合、後手で相手の出方を伺う。
　相手が１個の場合、３個食べれば、ケーキが１０個で後手の場合と同じ。
　相手が３個の場合、１個食べれば、ケーキが１０個で後手の場合と同じ。
　相手が２個の場合、３個食べると、相手は１個か２個。１個の場合は２個食べれると


ケーキがn個の場合、先手後手どちらを選び、何個食べたらどうなるかを組み合わせで表現したい。
プレイヤーをP,相手をCとし、ケーキを食べる様子を(P,1)(C,2)などと表現する。
いっそプレイヤーも省略し、食べた個数だけで表現してみたらどうか。

ケーキが1,2,6,10,...個の時は、後手がよい。
それ以外は、先手がよい。



-}



