-- https://www.codewars.com/kata/5581e52ac76ffdea700000c1
-- Rule 30

module Codewars.Kata.Rule30 (rule30) where

rule30 :: [Int] -> Int -> [Int]
rule30 cells 0 = cells
rule30 cells n = rule30 (next $ [0,0] ++ cells ++ [0,0]) (n-1)
    where
        next (x:y:z:xs) = newCell [x,y,z] : next (y:z:xs)
        next xs = []

newCell :: [Int] -> Int
newCell cells = case cells of
    [0,0,0] -> 0
    [0,0,1] -> 1
    [0,1,0] -> 1
    [0,1,1] -> 1
    [1,0,0] -> 1
    [1,0,1] -> 0
    [1,1,0] -> 0
    [1,1,1] -> 0

{-
ルール３０とは１次元のセルオートマトンである。
セルオートマトンとは、ライフゲームやフラクタル図形に代表されるように、
決まった規則に則って作られた配列、およびそれによって描画される図形のことである。

初期状態として[1]が与えられると、次の状態は[1,1,1]である。
これは、[1]の前後は[0]で埋まっているとするため、
[0,0,1],[0,1,0],[1,0,0]をルール３０に基づいて変換した結果、[1,1,1]となる。

そうすると、次の状態は、
[0,0,1],[0,1,1],[1,1,1],[1,1,0],[1,0,0]をルール３０に基づいて変換した、
[1,1,0,0,1]となる。



-}